/*
 * This file is generated by jOOQ.
 */
package com.bookjob.jooq.generated.tables.pojos;


import com.bookjob.jooq.generated.enums.BookMarkBookMarkType;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class BookMark implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final BookMarkBookMarkType bookMarkType;
    private final LocalDateTime createdAt;
    private final Long memberId;
    private final Long relatedId;

    public BookMark(BookMark value) {
        this.id = value.id;
        this.bookMarkType = value.bookMarkType;
        this.createdAt = value.createdAt;
        this.memberId = value.memberId;
        this.relatedId = value.relatedId;
    }

    public BookMark(
        Long id,
        BookMarkBookMarkType bookMarkType,
        LocalDateTime createdAt,
        Long memberId,
        Long relatedId
    ) {
        this.id = id;
        this.bookMarkType = bookMarkType;
        this.createdAt = createdAt;
        this.memberId = memberId;
        this.relatedId = relatedId;
    }

    /**
     * Getter for <code>bookjob.book_mark.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>bookjob.book_mark.book_mark_type</code>.
     */
    public BookMarkBookMarkType getBookMarkType() {
        return this.bookMarkType;
    }

    /**
     * Getter for <code>bookjob.book_mark.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>bookjob.book_mark.member_id</code>.
     */
    public Long getMemberId() {
        return this.memberId;
    }

    /**
     * Getter for <code>bookjob.book_mark.related_id</code>.
     */
    public Long getRelatedId() {
        return this.relatedId;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final BookMark other = (BookMark) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.bookMarkType == null) {
            if (other.bookMarkType != null)
                return false;
        }
        else if (!this.bookMarkType.equals(other.bookMarkType))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.memberId == null) {
            if (other.memberId != null)
                return false;
        }
        else if (!this.memberId.equals(other.memberId))
            return false;
        if (this.relatedId == null) {
            if (other.relatedId != null)
                return false;
        }
        else if (!this.relatedId.equals(other.relatedId))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.bookMarkType == null) ? 0 : this.bookMarkType.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.memberId == null) ? 0 : this.memberId.hashCode());
        result = prime * result + ((this.relatedId == null) ? 0 : this.relatedId.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("BookMark (");

        sb.append(id);
        sb.append(", ").append(bookMarkType);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(memberId);
        sb.append(", ").append(relatedId);

        sb.append(")");
        return sb.toString();
    }
}
