/*
 * This file is generated by jOOQ.
 */
package com.bookjob.jooq.generated.tables.records;


import com.bookjob.jooq.generated.tables.Comment;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>bookjob.comment.id</code>.
     */
    public CommentRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>bookjob.comment.created_at</code>.
     */
    public CommentRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>bookjob.comment.modified_at</code>.
     */
    public CommentRecord setModifiedAt(LocalDateTime value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>bookjob.comment.deleted_at</code>.
     */
    public CommentRecord setDeletedAt(LocalDateTime value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>bookjob.comment.board_id</code>.
     */
    public CommentRecord setBoardId(Long value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.board_id</code>.
     */
    public Long getBoardId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>bookjob.comment.content</code>.
     */
    public CommentRecord setContent(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.content</code>.
     */
    public String getContent() {
        return (String) get(5);
    }

    /**
     * Setter for <code>bookjob.comment.is_authentic</code>.
     */
    public CommentRecord setIsAuthentic(Boolean value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.is_authentic</code>.
     */
    public Boolean getIsAuthentic() {
        return (Boolean) get(6);
    }

    /**
     * Setter for <code>bookjob.comment.member_id</code>.
     */
    public CommentRecord setMemberId(Long value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.member_id</code>.
     */
    public Long getMemberId() {
        return (Long) get(7);
    }

    /**
     * Setter for <code>bookjob.comment.nickname</code>.
     */
    public CommentRecord setNickname(String value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.nickname</code>.
     */
    public String getNickname() {
        return (String) get(8);
    }

    /**
     * Setter for <code>bookjob.comment.text</code>.
     */
    public CommentRecord setText(String value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>bookjob.comment.text</code>.
     */
    public String getText() {
        return (String) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Long id, LocalDateTime createdAt, LocalDateTime modifiedAt, LocalDateTime deletedAt, Long boardId, String content, Boolean isAuthentic, Long memberId, String nickname, String text) {
        super(Comment.COMMENT);

        setId(id);
        setCreatedAt(createdAt);
        setModifiedAt(modifiedAt);
        setDeletedAt(deletedAt);
        setBoardId(boardId);
        setContent(content);
        setIsAuthentic(isAuthentic);
        setMemberId(memberId);
        setNickname(nickname);
        setText(text);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(com.bookjob.jooq.generated.tables.pojos.Comment value) {
        super(Comment.COMMENT);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setModifiedAt(value.getModifiedAt());
            setDeletedAt(value.getDeletedAt());
            setBoardId(value.getBoardId());
            setContent(value.getContent());
            setIsAuthentic(value.getIsAuthentic());
            setMemberId(value.getMemberId());
            setNickname(value.getNickname());
            setText(value.getText());
            resetChangedOnNotNull();
        }
    }
}
