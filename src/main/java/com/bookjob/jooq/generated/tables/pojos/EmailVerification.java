/*
 * This file is generated by jOOQ.
 */
package com.bookjob.jooq.generated.tables.pojos;


import com.bookjob.jooq.generated.enums.EmailVerificationReason;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class EmailVerification implements Serializable {

    private static final long serialVersionUID = 1L;

    private final LocalDateTime expirationTime;
    private final Long id;
    private final String code;
    private final String email;
    private final EmailVerificationReason reason;

    public EmailVerification(EmailVerification value) {
        this.expirationTime = value.expirationTime;
        this.id = value.id;
        this.code = value.code;
        this.email = value.email;
        this.reason = value.reason;
    }

    public EmailVerification(
        LocalDateTime expirationTime,
        Long id,
        String code,
        String email,
        EmailVerificationReason reason
    ) {
        this.expirationTime = expirationTime;
        this.id = id;
        this.code = code;
        this.email = email;
        this.reason = reason;
    }

    /**
     * Getter for <code>bookjob.email_verification.expiration_time</code>.
     */
    public LocalDateTime getExpirationTime() {
        return this.expirationTime;
    }

    /**
     * Getter for <code>bookjob.email_verification.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>bookjob.email_verification.code</code>.
     */
    public String getCode() {
        return this.code;
    }

    /**
     * Getter for <code>bookjob.email_verification.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>bookjob.email_verification.reason</code>.
     */
    public EmailVerificationReason getReason() {
        return this.reason;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final EmailVerification other = (EmailVerification) obj;
        if (this.expirationTime == null) {
            if (other.expirationTime != null)
                return false;
        }
        else if (!this.expirationTime.equals(other.expirationTime))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.code == null) {
            if (other.code != null)
                return false;
        }
        else if (!this.code.equals(other.code))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.reason == null) {
            if (other.reason != null)
                return false;
        }
        else if (!this.reason.equals(other.reason))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.expirationTime == null) ? 0 : this.expirationTime.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.code == null) ? 0 : this.code.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.reason == null) ? 0 : this.reason.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("EmailVerification (");

        sb.append(expirationTime);
        sb.append(", ").append(id);
        sb.append(", ").append(code);
        sb.append(", ").append(email);
        sb.append(", ").append(reason);

        sb.append(")");
        return sb.toString();
    }
}
