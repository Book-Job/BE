/*
 * This file is generated by jOOQ.
 */
package com.bookjob.jooq.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Comment implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final LocalDateTime createdAt;
    private final LocalDateTime modifiedAt;
    private final LocalDateTime deletedAt;
    private final Long boardId;
    private final String content;
    private final Boolean isAuthentic;
    private final Long memberId;
    private final String nickname;
    private final String text;

    public Comment(Comment value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.modifiedAt = value.modifiedAt;
        this.deletedAt = value.deletedAt;
        this.boardId = value.boardId;
        this.content = value.content;
        this.isAuthentic = value.isAuthentic;
        this.memberId = value.memberId;
        this.nickname = value.nickname;
        this.text = value.text;
    }

    public Comment(
        Long id,
        LocalDateTime createdAt,
        LocalDateTime modifiedAt,
        LocalDateTime deletedAt,
        Long boardId,
        String content,
        Boolean isAuthentic,
        Long memberId,
        String nickname,
        String text
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.modifiedAt = modifiedAt;
        this.deletedAt = deletedAt;
        this.boardId = boardId;
        this.content = content;
        this.isAuthentic = isAuthentic;
        this.memberId = memberId;
        this.nickname = nickname;
        this.text = text;
    }

    /**
     * Getter for <code>bookjob.comment.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>bookjob.comment.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>bookjob.comment.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Getter for <code>bookjob.comment.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Getter for <code>bookjob.comment.board_id</code>.
     */
    public Long getBoardId() {
        return this.boardId;
    }

    /**
     * Getter for <code>bookjob.comment.content</code>.
     */
    public String getContent() {
        return this.content;
    }

    /**
     * Getter for <code>bookjob.comment.is_authentic</code>.
     */
    public Boolean getIsAuthentic() {
        return this.isAuthentic;
    }

    /**
     * Getter for <code>bookjob.comment.member_id</code>.
     */
    public Long getMemberId() {
        return this.memberId;
    }

    /**
     * Getter for <code>bookjob.comment.nickname</code>.
     */
    public String getNickname() {
        return this.nickname;
    }

    /**
     * Getter for <code>bookjob.comment.text</code>.
     */
    public String getText() {
        return this.text;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Comment other = (Comment) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.modifiedAt == null) {
            if (other.modifiedAt != null)
                return false;
        }
        else if (!this.modifiedAt.equals(other.modifiedAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.boardId == null) {
            if (other.boardId != null)
                return false;
        }
        else if (!this.boardId.equals(other.boardId))
            return false;
        if (this.content == null) {
            if (other.content != null)
                return false;
        }
        else if (!this.content.equals(other.content))
            return false;
        if (this.isAuthentic == null) {
            if (other.isAuthentic != null)
                return false;
        }
        else if (!this.isAuthentic.equals(other.isAuthentic))
            return false;
        if (this.memberId == null) {
            if (other.memberId != null)
                return false;
        }
        else if (!this.memberId.equals(other.memberId))
            return false;
        if (this.nickname == null) {
            if (other.nickname != null)
                return false;
        }
        else if (!this.nickname.equals(other.nickname))
            return false;
        if (this.text == null) {
            if (other.text != null)
                return false;
        }
        else if (!this.text.equals(other.text))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.modifiedAt == null) ? 0 : this.modifiedAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.boardId == null) ? 0 : this.boardId.hashCode());
        result = prime * result + ((this.content == null) ? 0 : this.content.hashCode());
        result = prime * result + ((this.isAuthentic == null) ? 0 : this.isAuthentic.hashCode());
        result = prime * result + ((this.memberId == null) ? 0 : this.memberId.hashCode());
        result = prime * result + ((this.nickname == null) ? 0 : this.nickname.hashCode());
        result = prime * result + ((this.text == null) ? 0 : this.text.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Comment (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(modifiedAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(boardId);
        sb.append(", ").append(content);
        sb.append(", ").append(isAuthentic);
        sb.append(", ").append(memberId);
        sb.append(", ").append(nickname);
        sb.append(", ").append(text);

        sb.append(")");
        return sb.toString();
    }
}
