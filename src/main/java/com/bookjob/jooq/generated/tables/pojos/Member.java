/*
 * This file is generated by jOOQ.
 */
package com.bookjob.jooq.generated.tables.pojos;


import com.bookjob.jooq.generated.enums.MemberRole;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Member implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Boolean isBlocked;
    private final LocalDateTime createdAt;
    private final LocalDateTime deletedAt;
    private final Long id;
    private final LocalDateTime modifiedAt;
    private final String email;
    private final String loginId;
    private final String nickname;
    private final String password;
    private final String provider;
    private final String providerId;
    private final MemberRole role;

    public Member(Member value) {
        this.isBlocked = value.isBlocked;
        this.createdAt = value.createdAt;
        this.deletedAt = value.deletedAt;
        this.id = value.id;
        this.modifiedAt = value.modifiedAt;
        this.email = value.email;
        this.loginId = value.loginId;
        this.nickname = value.nickname;
        this.password = value.password;
        this.provider = value.provider;
        this.providerId = value.providerId;
        this.role = value.role;
    }

    public Member(
        Boolean isBlocked,
        LocalDateTime createdAt,
        LocalDateTime deletedAt,
        Long id,
        LocalDateTime modifiedAt,
        String email,
        String loginId,
        String nickname,
        String password,
        String provider,
        String providerId,
        MemberRole role
    ) {
        this.isBlocked = isBlocked;
        this.createdAt = createdAt;
        this.deletedAt = deletedAt;
        this.id = id;
        this.modifiedAt = modifiedAt;
        this.email = email;
        this.loginId = loginId;
        this.nickname = nickname;
        this.password = password;
        this.provider = provider;
        this.providerId = providerId;
        this.role = role;
    }

    /**
     * Getter for <code>bookjob.member.is_blocked</code>.
     */
    public Boolean getIsBlocked() {
        return this.isBlocked;
    }

    /**
     * Getter for <code>bookjob.member.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>bookjob.member.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Getter for <code>bookjob.member.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>bookjob.member.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Getter for <code>bookjob.member.email</code>.
     */
    public String getEmail() {
        return this.email;
    }

    /**
     * Getter for <code>bookjob.member.login_id</code>.
     */
    public String getLoginId() {
        return this.loginId;
    }

    /**
     * Getter for <code>bookjob.member.nickname</code>.
     */
    public String getNickname() {
        return this.nickname;
    }

    /**
     * Getter for <code>bookjob.member.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>bookjob.member.provider</code>.
     */
    public String getProvider() {
        return this.provider;
    }

    /**
     * Getter for <code>bookjob.member.provider_id</code>.
     */
    public String getProviderId() {
        return this.providerId;
    }

    /**
     * Getter for <code>bookjob.member.role</code>.
     */
    public MemberRole getRole() {
        return this.role;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Member other = (Member) obj;
        if (this.isBlocked == null) {
            if (other.isBlocked != null)
                return false;
        }
        else if (!this.isBlocked.equals(other.isBlocked))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.modifiedAt == null) {
            if (other.modifiedAt != null)
                return false;
        }
        else if (!this.modifiedAt.equals(other.modifiedAt))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.loginId == null) {
            if (other.loginId != null)
                return false;
        }
        else if (!this.loginId.equals(other.loginId))
            return false;
        if (this.nickname == null) {
            if (other.nickname != null)
                return false;
        }
        else if (!this.nickname.equals(other.nickname))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.provider == null) {
            if (other.provider != null)
                return false;
        }
        else if (!this.provider.equals(other.provider))
            return false;
        if (this.providerId == null) {
            if (other.providerId != null)
                return false;
        }
        else if (!this.providerId.equals(other.providerId))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.isBlocked == null) ? 0 : this.isBlocked.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.modifiedAt == null) ? 0 : this.modifiedAt.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.loginId == null) ? 0 : this.loginId.hashCode());
        result = prime * result + ((this.nickname == null) ? 0 : this.nickname.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.provider == null) ? 0 : this.provider.hashCode());
        result = prime * result + ((this.providerId == null) ? 0 : this.providerId.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Member (");

        sb.append(isBlocked);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(id);
        sb.append(", ").append(modifiedAt);
        sb.append(", ").append(email);
        sb.append(", ").append(loginId);
        sb.append(", ").append(nickname);
        sb.append(", ").append(password);
        sb.append(", ").append(provider);
        sb.append(", ").append(providerId);
        sb.append(", ").append(role);

        sb.append(")");
        return sb.toString();
    }
}
