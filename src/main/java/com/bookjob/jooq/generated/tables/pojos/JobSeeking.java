/*
 * This file is generated by jOOQ.
 */
package com.bookjob.jooq.generated.tables.pojos;


import com.bookjob.jooq.generated.enums.JobSeekingEmploymentType;
import com.bookjob.jooq.generated.enums.JobSeekingJobCategory;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JobSeeking implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Long id;
    private final LocalDateTime createdAt;
    private final LocalDateTime modifiedAt;
    private final LocalDateTime deletedAt;
    private final String contactEmail;
    private final JobSeekingEmploymentType employmentType;
    private final String experience;
    private final JobSeekingJobCategory jobCategory;
    private final Long memberId;
    private final String nickname;
    private final String text;
    private final String title;
    private final Integer viewCount;

    public JobSeeking(JobSeeking value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.modifiedAt = value.modifiedAt;
        this.deletedAt = value.deletedAt;
        this.contactEmail = value.contactEmail;
        this.employmentType = value.employmentType;
        this.experience = value.experience;
        this.jobCategory = value.jobCategory;
        this.memberId = value.memberId;
        this.nickname = value.nickname;
        this.text = value.text;
        this.title = value.title;
        this.viewCount = value.viewCount;
    }

    public JobSeeking(
        Long id,
        LocalDateTime createdAt,
        LocalDateTime modifiedAt,
        LocalDateTime deletedAt,
        String contactEmail,
        JobSeekingEmploymentType employmentType,
        String experience,
        JobSeekingJobCategory jobCategory,
        Long memberId,
        String nickname,
        String text,
        String title,
        Integer viewCount
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.modifiedAt = modifiedAt;
        this.deletedAt = deletedAt;
        this.contactEmail = contactEmail;
        this.employmentType = employmentType;
        this.experience = experience;
        this.jobCategory = jobCategory;
        this.memberId = memberId;
        this.nickname = nickname;
        this.text = text;
        this.title = title;
        this.viewCount = viewCount;
    }

    /**
     * Getter for <code>bookjob.job_seeking.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Getter for <code>bookjob.job_seeking.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for <code>bookjob.job_seeking.modified_at</code>.
     */
    public LocalDateTime getModifiedAt() {
        return this.modifiedAt;
    }

    /**
     * Getter for <code>bookjob.job_seeking.deleted_at</code>.
     */
    public LocalDateTime getDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Getter for <code>bookjob.job_seeking.contact_email</code>.
     */
    public String getContactEmail() {
        return this.contactEmail;
    }

    /**
     * Getter for <code>bookjob.job_seeking.employment_type</code>.
     */
    public JobSeekingEmploymentType getEmploymentType() {
        return this.employmentType;
    }

    /**
     * Getter for <code>bookjob.job_seeking.experience</code>.
     */
    public String getExperience() {
        return this.experience;
    }

    /**
     * Getter for <code>bookjob.job_seeking.job_category</code>.
     */
    public JobSeekingJobCategory getJobCategory() {
        return this.jobCategory;
    }

    /**
     * Getter for <code>bookjob.job_seeking.member_id</code>.
     */
    public Long getMemberId() {
        return this.memberId;
    }

    /**
     * Getter for <code>bookjob.job_seeking.nickname</code>.
     */
    public String getNickname() {
        return this.nickname;
    }

    /**
     * Getter for <code>bookjob.job_seeking.text</code>.
     */
    public String getText() {
        return this.text;
    }

    /**
     * Getter for <code>bookjob.job_seeking.title</code>.
     */
    public String getTitle() {
        return this.title;
    }

    /**
     * Getter for <code>bookjob.job_seeking.view_count</code>.
     */
    public Integer getViewCount() {
        return this.viewCount;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final JobSeeking other = (JobSeeking) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.modifiedAt == null) {
            if (other.modifiedAt != null)
                return false;
        }
        else if (!this.modifiedAt.equals(other.modifiedAt))
            return false;
        if (this.deletedAt == null) {
            if (other.deletedAt != null)
                return false;
        }
        else if (!this.deletedAt.equals(other.deletedAt))
            return false;
        if (this.contactEmail == null) {
            if (other.contactEmail != null)
                return false;
        }
        else if (!this.contactEmail.equals(other.contactEmail))
            return false;
        if (this.employmentType == null) {
            if (other.employmentType != null)
                return false;
        }
        else if (!this.employmentType.equals(other.employmentType))
            return false;
        if (this.experience == null) {
            if (other.experience != null)
                return false;
        }
        else if (!this.experience.equals(other.experience))
            return false;
        if (this.jobCategory == null) {
            if (other.jobCategory != null)
                return false;
        }
        else if (!this.jobCategory.equals(other.jobCategory))
            return false;
        if (this.memberId == null) {
            if (other.memberId != null)
                return false;
        }
        else if (!this.memberId.equals(other.memberId))
            return false;
        if (this.nickname == null) {
            if (other.nickname != null)
                return false;
        }
        else if (!this.nickname.equals(other.nickname))
            return false;
        if (this.text == null) {
            if (other.text != null)
                return false;
        }
        else if (!this.text.equals(other.text))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.viewCount == null) {
            if (other.viewCount != null)
                return false;
        }
        else if (!this.viewCount.equals(other.viewCount))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.modifiedAt == null) ? 0 : this.modifiedAt.hashCode());
        result = prime * result + ((this.deletedAt == null) ? 0 : this.deletedAt.hashCode());
        result = prime * result + ((this.contactEmail == null) ? 0 : this.contactEmail.hashCode());
        result = prime * result + ((this.employmentType == null) ? 0 : this.employmentType.hashCode());
        result = prime * result + ((this.experience == null) ? 0 : this.experience.hashCode());
        result = prime * result + ((this.jobCategory == null) ? 0 : this.jobCategory.hashCode());
        result = prime * result + ((this.memberId == null) ? 0 : this.memberId.hashCode());
        result = prime * result + ((this.nickname == null) ? 0 : this.nickname.hashCode());
        result = prime * result + ((this.text == null) ? 0 : this.text.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.viewCount == null) ? 0 : this.viewCount.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("JobSeeking (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(modifiedAt);
        sb.append(", ").append(deletedAt);
        sb.append(", ").append(contactEmail);
        sb.append(", ").append(employmentType);
        sb.append(", ").append(experience);
        sb.append(", ").append(jobCategory);
        sb.append(", ").append(memberId);
        sb.append(", ").append(nickname);
        sb.append(", ").append(text);
        sb.append(", ").append(title);
        sb.append(", ").append(viewCount);

        sb.append(")");
        return sb.toString();
    }
}
