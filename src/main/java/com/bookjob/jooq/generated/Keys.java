/*
 * This file is generated by jOOQ.
 */
package com.bookjob.jooq.generated;


import com.bookjob.jooq.generated.tables.Board;
import com.bookjob.jooq.generated.tables.BookMark;
import com.bookjob.jooq.generated.tables.Comment;
import com.bookjob.jooq.generated.tables.EmailVerification;
import com.bookjob.jooq.generated.tables.JobPosting;
import com.bookjob.jooq.generated.tables.JobSeeking;
import com.bookjob.jooq.generated.tables.Member;
import com.bookjob.jooq.generated.tables.records.BoardRecord;
import com.bookjob.jooq.generated.tables.records.BookMarkRecord;
import com.bookjob.jooq.generated.tables.records.CommentRecord;
import com.bookjob.jooq.generated.tables.records.EmailVerificationRecord;
import com.bookjob.jooq.generated.tables.records.JobPostingRecord;
import com.bookjob.jooq.generated.tables.records.JobSeekingRecord;
import com.bookjob.jooq.generated.tables.records.MemberRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * bookjob.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BoardRecord> KEY_BOARD_PRIMARY = Internal.createUniqueKey(Board.BOARD, DSL.name("KEY_board_PRIMARY"), new TableField[] { Board.BOARD.ID }, true);
    public static final UniqueKey<BookMarkRecord> KEY_BOOK_MARK_PRIMARY = Internal.createUniqueKey(BookMark.BOOK_MARK, DSL.name("KEY_book_mark_PRIMARY"), new TableField[] { BookMark.BOOK_MARK.ID }, true);
    public static final UniqueKey<CommentRecord> KEY_COMMENT_PRIMARY = Internal.createUniqueKey(Comment.COMMENT, DSL.name("KEY_comment_PRIMARY"), new TableField[] { Comment.COMMENT.ID }, true);
    public static final UniqueKey<EmailVerificationRecord> KEY_EMAIL_VERIFICATION_PRIMARY = Internal.createUniqueKey(EmailVerification.EMAIL_VERIFICATION, DSL.name("KEY_email_verification_PRIMARY"), new TableField[] { EmailVerification.EMAIL_VERIFICATION.ID }, true);
    public static final UniqueKey<EmailVerificationRecord> KEY_EMAIL_VERIFICATION_UKRP5NFRBN3MJDQ2LHD01NU7NE8 = Internal.createUniqueKey(EmailVerification.EMAIL_VERIFICATION, DSL.name("KEY_email_verification_UKrp5nfrbn3mjdq2lhd01nu7ne8"), new TableField[] { EmailVerification.EMAIL_VERIFICATION.EMAIL }, true);
    public static final UniqueKey<JobPostingRecord> KEY_JOB_POSTING_PRIMARY = Internal.createUniqueKey(JobPosting.JOB_POSTING, DSL.name("KEY_job_posting_PRIMARY"), new TableField[] { JobPosting.JOB_POSTING.ID }, true);
    public static final UniqueKey<JobSeekingRecord> KEY_JOB_SEEKING_PRIMARY = Internal.createUniqueKey(JobSeeking.JOB_SEEKING, DSL.name("KEY_job_seeking_PRIMARY"), new TableField[] { JobSeeking.JOB_SEEKING.ID }, true);
    public static final UniqueKey<MemberRecord> KEY_MEMBER_PRIMARY = Internal.createUniqueKey(Member.MEMBER, DSL.name("KEY_member_PRIMARY"), new TableField[] { Member.MEMBER.ID }, true);
    public static final UniqueKey<MemberRecord> KEY_MEMBER_UKMBMCQELTY0FBRVXP1Q58DN57T = Internal.createUniqueKey(Member.MEMBER, DSL.name("KEY_member_UKmbmcqelty0fbrvxp1q58dn57t"), new TableField[] { Member.MEMBER.EMAIL }, true);
}
